@page "/cars/cardetail/{carId:long}"
@using CarMarket.Core.Car.Domain
@using CarMarket.BusinessLogic.Image.Service
@using CarMarket.UI.Services.CarValuer
@using System.Threading
@using CarMarket.UI.Services.HttpInterceptor
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Car Detail</h3>
<hr />

<div class="col-12 row">

    @if (CarDetails != null)
    {
        <h5 class="col-12 row" style="font-weight:bold">Title: @CarDetails.Model?.Name
            <br>Price: $@CarDetails.Price
            <br>Year: @CarDetails.Year.Year
        </h5>

        <div>
            @if (_costLoaded) {
                    <div>
                        Estimated maintenance cost per year: @result?.Cost
                    </div>
              }
              else {
                  <div style="background-color: darkgray">
                        Sorry, we couldn't load estimated maintenance cost per hour for this car :( 
                    </div>
                  
              }</div>

        <h6 class="col-12 row">Brand: @CarDetails.Model?.Brand?.Name</h6>
        <h6 class="col-12 row">Model: @CarDetails.Model?.Name</h6>
        <h6 class="col-12 row">Type: @CarDetails.Model?.Type</h6>
        <h6 class="col-12 row">Description: @CarDetails.Description</h6>

        <ul style="list-style-type: none; margin: 0; padding: 0; overflow: hidden;">
        @foreach(var image in CarDetails.CarImages)
        {
            <img src="@ImageService.ConvertImageToDisplay(image)" style="display: inline; padding: 16px; text-decoration: none; height: 150px"/>
        }
        </ul>

        <h5 class="col-12 row" style="font-weight:bold">Car owner contacts</h5>
        <h6 class="col-12 row">Owner: @($"{CarDetails.Owner.FirstName} {CarDetails.Owner.LastName}")
        <br />Email: @CarDetails.Owner.Email
        <br />Phone number: @CarDetails.Owner.PhoneNumber</h6>
    }
</div>

@code {
    [Inject]
    public IHttpCarValuerService CarValuerService { get; set; }

    [Inject]
    public HttpInterceptorService Interceptor { get; set; }
    public void Dispose() => Interceptor.DisposeEvent();

    [Parameter]
    public long CarId { get; set; }
    public CarModel CarDetails { get; set; }
    public int CostPerYear { get; set; }
    bool _costLoaded = false;
    CostPerYearResult result;

    protected async override Task OnInitializedAsync()
    {
        try
        {
            CarDetails = await Http.GetFromJsonAsync<CarModel>("https://localhost:10001/api/Car/GetCar/" + CarId);

            try
            {
                var task = new Task(async () =>
                {
                    try
                    {
                        result = await CarValuerService.GetAsync(CarId, CancellationToken.None);

                        CostPerYear = result.Cost;
                        _costLoaded = true;

                        StateHasChanged();
                    }
                    catch
                    {
                    }
                });

                task.Start();
            }
            catch
            {
                result = new()
                    {
                        Cost = 0
                    };
                _costLoaded = false;
            }
        }
        catch
        {
            Navigation.NavigateTo("/");
        }
    }
}